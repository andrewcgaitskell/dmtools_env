# Use an official Fedora as the base image
FROM fedora:38

# Define build arguments
ARG BUILD_ENV_USER_USERNAME
ARG BUILD_ENV_USER_UID
ARG BUILD_ENV_USER_GID 
ARG BUILD_ENV_USER_GROUPNAME
ARG BUILD_ENV_REPO_URL
ARG BUILD_ENV_RUNNER_TOKEN

# Set environment variables based on arguments
ENV ENV_USER_USERNAME=$BUILD_ENV_USER_USERNAME
ENV ENV_USER_UID=$BUILD_ENV_USER_UID
ENV ENV_USER_GID=$BUILD_ENV_USER_GID 
ENV ENV_USER_GROUPNAME=$BUILD_ENV_USER_GROUPNAME

ENV ENV_REPO_URL=$BUILD_ENV_REPO_URL
ENV ENV_RUNNER_TOKEN=$BUILD_ENV_RUNNER_TOKEN

# Install necessary dependencies
RUN dnf install -y \
    dumb-init \
    jq \
    bash \
    curl \
    tar \
    git \
    sudo \
    unzip \
    passwd \
    shadow-utils \
    && dnf clean all

WORKDIR /actions-runner

# Download and extract the GitHub Actions runner
RUN curl -o actions-runner-linux-x64-2.319.1.tar.gz -L https://github.com/actions/runner/releases/download/v2.319.1/actions-runner-linux-x64-2.319.1.tar.gz && \
    tar xzf actions-runner-linux-x64-2.319.1.tar.gz && \
    rm actions-runner-linux-x64-2.319.1.tar.gz

# Install dependencies for the GitHub Actions runner
RUN ./bin/installdependencies.sh

# Create a work directory
RUN mkdir /_work

# Add a non-root user to run the GitHub Actions runner
RUN useradd -m -d /home/runner runner

RUN ls -al /home/runner

# Copy entrypoint script (optional, if you have one)
COPY entry_point.sh /

# Set ownership and permissions
RUN chown -R runner /_work /actions-runner
RUN chmod +x /entry_point.sh

# Switch to the runner user
USER runner

# Set the entrypoint to the script
ENTRYPOINT ["/entry_point.sh"]

# Default command to run when the container starts
CMD ["/run.py"]
